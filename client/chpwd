#!/usr/bin/wish
#
# Password change GUI
#
#++
# = CHPWD(1)
# :man manual: TL Realms
# :Revision: 1.0
# :Author: A Liu Ly
#
# == NAME
#
# chpwd - Password change tool GUI
#
# == SYNOPSIS
#
# *chpwd* _[hostname]_ _[port]_
#
# == DESCRPTION
#
# *chpwd* is a simple GUI for changing an user's password.
#
# == OPTIONS
#
# *hostname*::
#      Defaults to _localhost._
# *port*::
#      Port where the agent is listening to.  Defaults to _9989._
#
#--

set cf(tout) 60

proc mkui {f host port} {
    set w [frame $f.t]

    label $w.l_user
    entry $w.e_user -textvariable cf(user)
    grid $w.l_user -row 1 -column 1 -sticky nws
    grid $w.e_user -row 1 -column 2 -sticky news

    label $w.l_opwd
    entry $w.e_opwd -textvariable cf(opwd)
    grid $w.l_opwd -row 2 -column 1 -sticky nws
    grid $w.e_opwd -row 2 -column 2 -sticky news

    label $w.l_npwd
    entry $w.e_npwd -textvariable cf(npwd)
    grid $w.l_npwd -row 3 -column 1 -sticky nws
    grid $w.e_npwd -row 3 -column 2 -sticky news
    
    label $w.l_cpwd
    entry $w.e_cpwd -textvariable cf(cpwd)
    grid $w.l_cpwd -row 4 -column 1 -sticky nws
    grid $w.e_cpwd -row 4 -column 2 -sticky news
    
    pack $w -side top -expand 1 -fill both -padx 10 -pady 5

    set y [frame $f.b]

    button $y.b_ok -command [list okcmd $host $port $w $y]
    button $y.b_cancel -command {after 100 exit}

    pack $y.b_ok $y.b_cancel -side left -padx 10
    pack $y -side bottom -expand 1 -fill x -padx 10 -pady 5

    global tcl_platform
    $w.e_user insert 0 $tcl_platform(user)

    foreach e {user opwd npwd cpwd} {
	bind $w.e_$e <Key-Return> {event generate %W <Tab>}
	bind $w.e_$e <Key-Escape> [list b_invoke $y.b_cancel]
    }

    bind $w.e_cpwd <Key-Return> [list b_invoke $y.b_ok]


    foreach b {ok cancel} {
	bind $y.b_$b <Key-Return> {event generate %W <space>}
	bind $y.b_$b <Key-Escape> [list b_invoke $y.b_cancel]
    }
    after 100 [list focus -force $w.e_opwd]
    
}


proc set_state {state t} {
    foreach n $t {
	foreach c [winfo child $n] {
	    $c config -state $state
	}
    }
}


proc okcmd {host port args} {
    global cf
    if {$cf(npwd) != $cf(cpwd)} {
	tk_messageBox \
	    -icon error \
	    -message "You must type the same password twice" \
	    -parent . \
	    -title "chpwd: Error" \
	    -type ok
	return
    }

    set_state disabled $args
    wm protocol . WM_DELETE_WINDOW #

    set fd [socket -async $host $port]
    fconfigure $fd -blocking 0 -encoding binary
    fileevent $fd writable [list sendcmd $fd $args]
    set cf(timer) [after [expr {$cf(tout)*1000}] [list timed_out $fd $args]]
}

proc sendcmd {fd t} {
    global cf
    puts "SENDING CMD"
    puts $fd [join [list \
			"chpwd" \
			$cf(user) \
			$cf(opwd) \
			$cf(npwd) \
		       ] "\n"]
    flush $fd
    fileevent $fd writable {}
    fileevent $fd readable [list get_result $fd $t]
}

proc get_result {fd t} {
    global cf

    set res [string trim [read $fd]]
    close $fd
    catch { after cancel $cf(timer) }

    if {$res == "OK"} {
	tk_messageBox \
	    -icon info \
	    -message "Change password succeed\n\n$res" \
	    -parent . \
	    -title "chpwd" \
	    -type ok
	exit
    }
    tk_messageBox \
	-icon info \
	-message "Change password failed\n\n$res" \
	-parent . \
	-title "chpwd" \
	-type ok

    set_state normal $t
    wm protocol . WM_DELETE_WINDOW [list destroy .]
    focus .t.e_user
}

proc b_invoke {b} {
    focus -force $b
    event generate $b <space>
}


proc chpwd {{srv localhost} {port 9989}} {
    mkui {} $srv $port
}

foreach {p v} {
    *l_user.text	"Username: "
    *l_opwd.text	"Old password: "
    *l_npwd.text	"New password: "
    *l_cpwd.text	"Confirm password: "
    *e_opwd.show	"*"
    *e_npwd.show	"*"
    *e_cpwd.show	"*"
    
    *b_ok.text		" OK "
    *b_cancel.text	" Cancel "

    *Label.font		"Helvetica 8 bold"
    *Entry.font		"Courier 9"
    *Button.font	 "Helvetica 8 bold"
} {
    option add $p $v widgetDefault
}

chpwd {*}$argv
